---
title: "HW 02"
author: "Cat Xia"
format: 
  html:
    embed-resources: true
toc: true
---

Install Packages
```{r install}
#| label: install
if (!require("pacman"))
  install.packages("pacman")

pacman::p_load(tidyverse, here, glue, scales, ggridges, dsbox, fs, janitor)

ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))
options(width = 65)
knitr::opts_chunk$set(
  fig.width = 7,
  fig.asp = 0.618,
  fig.retina = 3,
  fig.align = "center",
  api = 300
)
```


## 1 - A new day, a new plot, a new geom


```{r Q1 data cleaning and new columns}
#| label: Q1 data cleaning and new columns

#stores new col in df
edibnb <- edibnb |>
  
  #creates new column based on median of neighborhood groupings. Ignores NA to allow for median values other than NA
  group_by(neighbourhood) |>
  mutate(med_review = median(review_scores_rating, na.rm = TRUE)) |>
  ungroup() |>
  
  #re-orders the neighbourhoods so that when graphed, it is by median rating. Also turns NA into other/unknown
  mutate(neighbourhood = fct_reorder(neighbourhood, med_review),
         #directed to documentation (https://forcats.tidyverse.org/reference/fct_reorder.html) through various slack overflow
         neighbourhood = fct_explicit_na(neighbourhood, na_level = "Other/Unknown"),
        #attempted with replace_na() but unable to figure out why it didn't work. Consulted AI on why it didn't work and realized that neighborhood was in the wrong class. Directed to fct_explicit_na and code written based off forcats documentation. (https://forcats.tidyverse.org/reference/fct_explicit_na.html)
        
        #differentiates the NA from not NA
        nei_color = if_else(neighbourhood == "Other/Unknown", "grey", "black"))
        
#used for numbers referred to in the explanation 
table(edibnb$neighbourhood)
```
```{r Q1 plot}
#| label: Code to plot graph for Q1
edibnb |>
  #assigns neighbourhood to y because density ridges require categorical variables
  ggplot(aes(x = review_scores_rating, y = neighbourhood)) +
  geom_density_ridges(aes(fill = nei_color, color = nei_color)) +
  
  #Zooms in to 75-105 because variation is difficult to see 0-105
  coord_cartesian(xlim = c(75, 105)) +
  
  scale_fill_manual(values = c("grey", "grey95")) +
  scale_color_manual(values = c("grey20", "grey95")) +
  
  labs(
    x = "Score (Out of 100)",
    y = "Neighbourhood",
    title = "Ratings of Airbnbs in Edinburgh Neighborhoods",
    subtitle = "Between 75 and 100",
    caption = "Source: edibnb from dsbox package"
  ) +
  #gets rid of legend
  guides(fill = "none", color = "none") +
  theme_minimal()
```
The graph shows the density of ratings for Edinburgh airbnbs based on Neighborhood, starting from the highest median rated neighborhoods to the lowest. The graph only looks at the density of ratings that range from 75 to 100 due to the low volume of ratings below 75 which makes it harder to see comparisons clearly. Most Airbnbs are rated similarly in Edinburgh irregardless of neighboorhood, around 95 to 100, with the highest median (Morningside) only beating out the lowest median (Haymarket) by less than  5 points. NA ended up being the highest rated as well as having the second highest number of variables (2294), though because the neighborhood is data is missing, it is impossible to draw any conclusions from this. 

I kept the variable in because it is a significant number of data points to ignore but colored it faintly so that it does not distract from the information I want to show.

## 2 - Foreign Connected PACs
```{r Get data from files}
#| label: get data from files Q2 (code given)
# get a list of files with "Foreign Connected PAC" in their names
list_of_files <- dir_ls(path = "data", regexp = "Foreign Connected PAC")

# read all files and row bind them
# keeping track of the file name in a new column called year
pac <- read_csv(list_of_files, id = "year")
```


```{r Q2 data cleaning initial}
#| label: Q2 data cleaning inital
pac <- pac |>
  clean_names() |>
  mutate(
    year = as.integer(parse_number(year) + 1), #*
    dems = as.numeric(gsub("[$,]", "", dems)), #**
    repubs = as.numeric(gsub("[$,]", "", repubs))) |> 
  separate_wider_delim(cols = country_of_origin_parent_company, delim = "/", names = c("country_of_origin", "parent_company"), too_many = "merge") |> #***
  subset(select = -total) #****
  
glimpse(pac)
```

Citations:
* parse_number from textbook, take advantage of 1 year span for each file to get the correct year
** read from https://stackoverflow.com/questions/50164340/negative-currency-values-using-parse-number-in-readr-r
*** read https://stackoverflow.com/questions/76167485/how-to-use-str-split-fixed-to-split-a-column-while-removing-the-original-column for inspiration, code from documentation
**** https://stackoverflow.com/questions/6286313/remove-an-entire-column-from-a-data-frame-in-r

```{r Q2 data cleaning pivot}
#| label: Q2 pivoting the data
pivot_pac <- pac |>
  #pivots dems and repubs only to party (doesn't use ! in cols to not also pivot the rest)
  pivot_longer(cols = c(dems, repubs), names_to = "party", values_to = "amount") |>
  #changes the party to be capitalized and the full word.
  mutate(party = if_else(party == "dems", "Democrat", "Republican"))

glimpse(pivot_pac)
```
```{r Q2 summary table for election cycle UK}
#| label: Q2 summarizing for UK contributions
yearly_contr_uk <- pivot_pac |>
  group_by(year, party) |>
  filter(country_of_origin == "UK") |>
  summarise(contribution = sum(amount))

glimpse(yearly_contr_uk)
```
```{r Q2 graph recreation UK}
#| label: Q2 political party contribution graph recreation

yearly_contr_uk |>
  ggplot(aes(x = year, y = contribution, color = party)) +
  geom_line(size = 1) +
  scale_color_manual(values = c("blue", "red")) +
  labs(
    x = "Year",
    y = "Total amount",
    title = "Contributions to US political parties from UK-connected PACs",
    color = "Party",
    caption = "Source: OpenSecrets.org"
  ) +
  scale_y_continuous(labels = label_dollar(scale = 1/1000000, suffix = "M")) +
  theme_minimal() +
  theme(
    axis.title.x = element_text(hjust = 0), #*
    axis.title.y = element_text(hjust = 0),
    legend.position = c(0.9, 0.15),
    text = element_text(size = 10) #**
  )
```
Citations
*https://www.sthda.com/english/wiki/ggplot2-title-main-axis-and-legend-titles
**https://stackoverflow.com/questions/18486459/change-the-font-size-of-a-ggplot-chart 


```{r Summarize for canada pac contributions}
#| label: Q2 summarizing for Canadian contributions
yearly_contr_ca <- pivot_pac |>
  group_by(year, party) |>
  filter(country_of_origin == "Canada") |>
  summarise(contribution = sum(amount))

glimpse(yearly_contr_ca)
```
```{r Q2 graph canada}
#| label: Q2 political party contribution graph for Canada PACs

yearly_contr_ca |>
  ggplot(aes(x = year, y = contribution, color = party)) +
  geom_line(size = 1) +
  scale_color_manual(values = c("blue", "red")) +
  labs(
    x = "Year",
    y = "Total amount",
    title = "Contributions to US political parties from Canadian-connected PACs",
    color = "Party",
    caption = "Source: OpenSecrets.org"
  ) +
  scale_y_continuous(labels = label_dollar(scale = 1/1000000, suffix = "M")) +
  theme_minimal() +
  theme(
    axis.title.x = element_text(hjust = 0), #*
    axis.title.y = element_text(hjust = 0),
    legend.position = c(0.9, 0.15),
    text = element_text(size = 10) #**
  )
```
This graph reveals the monetary contributions to either the Democratic or Republican party from Canadian-tied PACs from 2000 to 2022. We can see that compared to the UK, Canada contributes significantly less to American political parties (at some points up to 6 times less). We also can see a steep rise in political party contribution since the 2005s (from close to 0.05 million per party in 2000 to under 1 million per party in 2020). However, most contributions are relatively equal monetarily to both the Democrat and Republican parties, with the exception of the period between 2014 and 2020, where the Republican party received more money. However, the graph seems to trend to more equal contributions.

## 3 - Median housing prices in the US


## 4 - Expect More. Plot More.


## 5 - Mirror, mirror on the wall, whoâ€™s the ugliest of them all?
